//-/////////////////////////////////////////////////////////////////////////////
//-                                                                           //
//-              This file is part of the Buildbotics firmware.               //
//-                                                                           //
//-                Copyright (c) 2015 - 2018, Buildbotics LLC                 //
//-                           All rights reserved.                            //
//-                                                                           //
//-   This file ("the software") is free software: you can redistribute it    //
//-   and/or modify it under the terms of the GNU General Public License,     //
//-    version 2 as published by the Free Software Foundation. You should     //
//-    have received a copy of the GNU General Public License, version 2      //
//-   along with the software. If not, see <http://www.gnu.org/licenses/>.    //
//-                                                                           //
//-   The software is distributed in the hope that it will be useful, but     //
//-        WITHOUT ANY WARRANTY; without even the implied warranty of         //
//-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU      //
//-             Lesser General Public License for more details.               //
//-                                                                           //
//-     You should have received a copy of the GNU Lesser General Public      //
//-              License along with the software.  If not, see                //
//-                     <http://www.gnu.org/licenses/>.                       //
//-                                                                           //
//-              For information regarding this software email:               //
//-                "Joseph Coffland" <joseph@buildbotics.com>                 //
//-                                                                           //
//-/////////////////////////////////////////////////////////////////////////////

script#settings-network-template(type="text/x-template")
  #settings-network
    h1 Network Configuration
    h2 Hostname
    .pure-form.pure-form-aligned
      .pure-control-group
        label(for="hostname") Hostname
        input(name="hostname", v-model="hostname", @keyup.enter="set_hostname")
        button.pure-button.pure-button-primary(@click="set_hostname") Set

    message(:show.sync="hostnameSet")
      h3(slot="header") Hostname Set
      div(slot="body")
        p Hostname was successfuly set to #[strong {{hostname}}].
        p Rebooting to apply changes.
        p Redirecting to new hostname in {{redirectTimeout}} seconds.
      div(slot="footer")

    h2 Remote SSH User
    .pure-form.pure-form-aligned
      .pure-control-group
        label(for="username") Username
        input(name="username", v-model="username", @keyup.enter="set_username")
        button.pure-button.pure-button-primary(@click="set_username") Set

    .pure-form.pure-form-aligned
      .pure-control-group
        label(for="current") Current Password
        input(name="current", v-model="current", type="password")
      .pure-control-group
        label(for="pass1") New Password
        input(name="pass1", v-model="password", type="password")
      .pure-control-group
        label(for="pass2") New Password
        input(name="pass2", v-model="password2", type="password")
        button.pure-button.pure-button-primary(@click="set_password") Set

    h2 Wifi Setup
    .pure-form.pure-form-aligned
      .pure-control-group
        label(for="wifi_mode") Mode
        select(name="wifi_mode", v-model="wifi_mode",
          title="Select client or access point mode")
          option(value="disabled") Disabled
          option(value="client") Client
          option(value="ap") Access Point
        button.pure-button.pure-button-primary(@click="wifiConfirm = true",
          v-if="wifi_mode == 'disabled'") Set

      .pure-control-group(v-if="wifi_mode == 'ap'")
        label(for="wifi_ch") Channel
        select(name="wifi_ch", v-model="wifi_ch")
          each ch in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
            option(value=ch)= ch

      .pure-control-group(v-if="wifi_mode != 'disabled'")
        label(for="ssid") Network (SSID)
        input(name="ssid", v-model="wifi_ssid")

      .pure-control-group(v-if="wifi_mode != 'disabled'")
        label(for="wifi_pass") Password
        input(name="wifi_pass", v-model="wifi_pass", type="password")
        button.pure-button.pure-button-primary(@click="wifiConfirm = true") Set

    p(v-if="wifi_mode != 'disabled'").
      WARNING: WiFi may be unreliable in an electrically noisy environment
      such as a machine shop.

    message.wifi-confirm(:show.sync="wifiConfirm")
      h3(slot="header") Configure Wifi and reboot?
      div(slot="body")
        p.
          After configuring the Wifi settings the controller will automatically
          reboot.
        table
          tr
            th Mode
            td &nbsp;{{wifi_mode}}
          tr(v-if="wifi_mode == 'ap'")
            th Channel
            td &nbsp;{{wifi_ch}}
          tr(v-if="wifi_mode != 'disabled'")
            th SSID
            td &nbsp;{{wifi_ssid}}
          tr(v-if="wifi_mode != 'disabled'")
            th Auth
            td &nbsp;{{wifi_pass ? 'WPA2' : 'Open'}}

      div(slot="footer")
        button.pure-button(@click="wifiConfirm = false") Cancel
        button.pure-button.button-success(@click="config_wifi") OK

    message(:show.sync="rebooting")
      h3(slot="header") Rebooting
      p(slot="body") Please wait...
      div(slot="footer")
